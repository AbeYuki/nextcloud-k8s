apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: nextcloud-web
    app.kubernetes.io/name: nextcloud
  name: web
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/component: nextcloud-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: nextcloud-web
    app.kubernetes.io/name: nextcloud
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nextcloud
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nextcloud-web
        app.kubernetes.io/name: nextcloud
    spec:
      containers:
      - name: web
        image: web
        command: ["/bin/sh", "-c", "nginx -g 'daemon off;' -c /etc/nginx/custom-nginx.conf"]
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db
              key: MYSQL_USER
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: db
              key: MYSQL_HOST    
        ports:
        - containerPort: 80
        volumeMounts:
        - name: web
          mountPath: /var/www/html
        - name: config-nginx
          mountPath: /etc/nginx/custom-nginx.conf
          subPath: custom-nginx.conf
      volumes:
      - name: web
        persistentVolumeClaim:
          claimName: app
      - name: config-nginx
        configMap:
          name: config-nginx
