apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: nextcloud
    app.kubernetes.io/name: nextcloud
  name: app
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 80
    protocol: TCP
  selector:
    app.kubernetes.io/name: nextcloud
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app
  labels:
    app.kubernetes.io/component: nextcloud
    app.kubernetes.io/name: nextcloud
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: nextcloud
    app.kubernetes.io/name: nextcloud
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nextcloud
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nextcloud
        app.kubernetes.io/name: nextcloud
    spec:
      containers:
      - name: app
        image: app
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db
              key: MYSQL_USER
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: nextcloud-db
              key: MYSQL_HOST    
        ports:
        - containerPort: 80
        volumeMounts:
        - name: app
          mountPath: /var/www/html
      volumes:
      - name: app
        persistentVolumeClaim:
          claimName: app
